import act.processor.ProcessorHandler;
import model.input.InputParagraph;
import model.input.SummaryInputParagraph;
import model.process.Paragraph;
import org.assertj.core.util.Lists;
import org.junit.Test;
import org.junit.jupiter.api.DisplayName;

import java.io.UnsupportedEncodingException;
import java.util.List;
import java.util.stream.Collectors;

public class TranslateTest {
    @Test
    @DisplayName("???? 6? ?? ???")
    public void translateTest1() throws UnsupportedEncodingException {
        List<InputParagraph> inputParagraphs = Lists.newArrayList(getTest1());

        ProcessorHandler processorHandler = ProcessorHandler.getInstance();
        List<Paragraph> paragraphs = inputParagraphs.parallelStream()
                .map(inputParagraph -> processorHandler.process(inputParagraph))
                .collect(Collectors.toList());

        StringBuilder paragraphBuilder = new StringBuilder();
        for (Paragraph paragraph : paragraphs) {
            paragraphBuilder.append(paragraph.toString());
        }
        byte[] answerByte = getBrailleMattaSix().getBytes("UTF-16");
    }


    private List<InputParagraph> getTest1() {
        return Lists.newArrayList(
                new SummaryInputParagraph("¬ª¬Û¬ã¬Ñ ¬®¬Ñ¬ã¬Ú¬Û¬ç¬ä¬í? ¬ê¬Ö¬Ø¬Ú¬â¬Ö¬ã¬Ú", "¬­¬å¬Ü 3:23-38")
        );
    }

    private String getBrailleMattaSix() {
        return "?? ?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n" +
                "?? ???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n" +
                "?? ???????????????????????????????????????????????????????????????????????????????????????????\n" +
                "?? ????????????????????????????????????????????????????????????????????????????????????????\n" +
                "?? ???????????????????????????????????\n";
    }
}
